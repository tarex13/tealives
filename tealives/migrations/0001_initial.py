# Generated by Django 3.2 on 2022-07-08 00:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chat_member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chat_room',
            fields=[
                ('room_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('members', models.ManyToManyField(default='', to='tealives.Chat_member')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_comment_text', models.CharField(max_length=255)),
                ('r_time', models.DateTimeField()),
                ('r_is_deleted', models.BooleanField(default=False)),
                ('r_likes', models.IntegerField()),
                ('r_reply', models.CharField(max_length=255)),
                ('r_receiver', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('r_sender', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_id', models.CharField(max_length=225)),
                ('name', models.CharField(max_length=225, unique=True)),
                ('base', models.CharField(choices=[('U', 'User Picture'), ('S', 'Story Picture'), ('P', 'Post Picture')], max_length=20)),
                ('file', models.FileField(upload_to='', verbose_name='file')),
                ('file_type', models.CharField(blank=True, max_length=10)),
                ('file_mime', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Verify',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_verified', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_id', models.CharField(max_length=225)),
                ('story_id', models.CharField(max_length=255)),
                ('text', models.CharField(blank=True, max_length=255)),
                ('file', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='tealives.files')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acc_type', models.BooleanField(default=0)),
                ('two_ver', models.BooleanField(default=0)),
                ('sec_answer', models.CharField(choices=[('MN', 'What is your middle name?'), ('FF', 'What is your favourite food?'), ('FW', 'What is your favourite day of the week?'), ('FN', 'What is your first Nickname?'), ('PN', "What is your pet's name?")], default='', max_length=50)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post_likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_liked', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('p_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('desc', models.CharField(blank=True, max_length=255)),
                ('title', models.SlugField(blank=True, max_length=100)),
                ('top_text', models.CharField(blank=True, max_length=255)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('link', models.URLField(blank=True)),
                ('is_disabled', models.BooleanField(default=False, help_text='Designates whether this users post should be disabled. Select this when post violates community guidelines.', verbose_name='disabled')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this post is deleted.', verbose_name='deleted')),
                ('last_modified', models.DateTimeField(auto_now_add=True, verbose_name='last modified')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('comments', models.ManyToManyField(blank=True, to='tealives.Comment_reply')),
                ('files', models.ManyToManyField(to='tealives.Files')),
                ('tagged', models.ManyToManyField(blank=True, related_name='Username', to=settings.AUTH_USER_MODEL)),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Logged_in',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(max_length=50)),
                ('time_active', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follower_followed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('followed', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL)),
                ('follower', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='followed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_comment_text', models.CharField(max_length=255)),
                ('c_time', models.DateTimeField()),
                ('c_is_deleted', models.BooleanField(default=False)),
                ('c_likes', models.IntegerField(default=0)),
                ('c_receiver', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('c_replies', models.ManyToManyField(blank=True, to='tealives.Comment_reply')),
                ('c_sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chat_text',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='', max_length=225)),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tealives.chat_room')),
            ],
        ),
        migrations.CreateModel(
            name='Chat_state',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_state', models.BooleanField(default=0)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('room_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='tealives.chat_room')),
                ('user_typing', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_id', models.CharField(max_length=225)),
                ('time', models.DateTimeField()),
                ('location', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
